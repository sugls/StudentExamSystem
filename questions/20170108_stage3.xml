<?xml version="1.0" encoding="UTF-8"?>

<questions>
  <question id="21">
    <note>single selection</note>
    <detail>
			What happens on trying to compile and run the following code?
			public class EqualsTest{
			public static void main(String args[]){
			Object A=new Long(7);
			Long L=new Long(7);
			if(A.equals(L))
			System.out.println("Equal");
			else
			System.out.println("Not Equal");
			}
			}
			}
		</detail>
    <choice>
			The program compiles and prints "Equal".
			The program compiles and prints "Not Equal".
			The compiler objects to line 5.
			A runtime cast error occurs at line 5.
		</choice>
    <answer>1000</answer>
  </question>
  <question id="22">
    <note>single selection</note>
    <detail>
			Why won't the following class compile?
			class A {
			private int x;
			public static void main(String[] args) {
			new B();
			}
			class B {
			B() {
			System.out.println(x);
			}
			}
			}
			Select the one right answer.
		</detail>
    <choice>
			Class B tries to access a private variable defined in its ouer class.
			Class A attempts to create an instance of B when there is no current instance of class A.
			Class B's constructor must be public.
		</choice>
    <answer>010</answer>
  </question>
  <question id="23">
    <note>single selection</note>
    <detail>
			What happens on trying to compile the following code?
			interface Foo{
			int k=0;
			}
			public class Test implements Foo{
			public static void main(String args[]){
			int i;
			Test test = new Test();
			i=test.k;
			i=Test.k;
			i=Foo.k;
			}
			}
		</detail>
    <choice>
			Compilation succeeds.
			An error at line 2 causes compilation to fail.
			An error at line 9 causes compilation to fail.
			An error at line 10 causes compilation to fail.
			An error at line 11 causes compilation to fail.
		</choice>
    <answer>10000</answer>
  </question>
  <question id="24">
    <note>multiple selection</note>
    <detail>
			Which interface implementations can you add as listeners for a TextField object?Select all valid answers.
		</detail>
    <choice>
			ActionListener
			FocusListener
			MouseMotionListener
			WindowListener
			ContainerListener
		</choice>
    <answer>11100</answer>
  </question>
  <question id="25">
    <note>multiple selection</note>
    <detail>
			Which statements are true about Listeners?
		</detail>
    <choice>
			At most one listener can be added to any simple Component.
			The return value from a listener is used to control the invocation of other listener
			if multiple listeners are added to a single component, they must all be made friends to each other
			if multiple listeners are added to single component, the order of invocation of the listener is not specified.
			In the AWT, listener methods generally take an argument, which is an instance of some subclass of java.awt.AWTEvent class.
		</choice>
    <answer>00011</answer>
  </question>
  <question id="26">
    <note>single selection</note>
    <detail>
			Which method you define as the starting point of new thread in a class from which the new thread can be excution?
		</detail>
    <choice>
			public void start()
			public void run()
			public void int()
			public static void main(String args[])
			public void runnable()
		</choice>
    <answer>01000</answer>
  </question>
  <question id="27">
    <note>single selection</note>
    <detail>
			Which modifier should be applied to a method for the lock of object this to be obtained prior to excution any of the method body?
		</detail>
    <choice>
			synchronized
			abstract
			final
			static
			public
		</choice>
    <answer>10000</answer>
  </question>
  <question id="28">
    <note>multiple selection</note>
    <detail>
			Give the following method:
			public void example(){
			try{
			unsafe();
			System.out.println("Test1");
			}catch(SafeException e){System.out.println("Test 2");
			}finally{System.out.println("Test 3");}
			System.out.println("Test 4");
			Which will display if method unsafe () run normally?
		</detail>
    <choice>
			Test 1
			Test 2
			Test 3
			Test 4
		</choice>
    <answer>1011</answer>
  </question>
  <question id="29">
    <note>single selection</note>
    <detail>
			Carefully examine the following code:

			public class StaticTest {
			static {
			System.out.println("Hi there");
			}
			public void print() {
			System.out.println("Hello");
			}
			public static void main(String args []) {
			StaticTest st1 = new StaticTest();
			st1.print();
			StaticTest st2 = new StaticTest();
			st2.print();
			}
			}
			When will the string "Hi there" be printed?
		</detail>
    <choice>
			Never.
			Each time a new instance is created.
			Once when the class is first loaded into the Java virtual machine.
			Only when the static method is called explicitly.
		</choice>
    <answer>0010</answer>
  </question>
  <question id="30">
    <note>single selection</note>
    <detail>
			A class design requires that a member variable should be accessible only by same package, which modifer word should be used?
		</detail>
    <choice>
			protected
			public
			no modifer
			private
		</choice>
    <answer>0010</answer>
  </question>
</questions>
